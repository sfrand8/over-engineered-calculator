// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package get_history

import (
	"over-engineered-calculator/internal/database"
	"sync"
)

// Ensure, that calculationHistoryRetrieverMock does implement calculationHistoryRetriever.
// If this is not the case, regenerate this file with moq.
var _ calculationHistoryRetriever = &calculationHistoryRetrieverMock{}

// calculationHistoryRetrieverMock is a mock implementation of calculationHistoryRetriever.
//
//	func TestSomethingThatUsescalculationHistoryRetriever(t *testing.T) {
//
//		// make and configure a mocked calculationHistoryRetriever
//		mockedcalculationHistoryRetriever := &calculationHistoryRetrieverMock{
//			GetHistoryFunc: func(userID string) ([]database.Calculation, error) {
//				panic("mock out the GetHistory method")
//			},
//		}
//
//		// use mockedcalculationHistoryRetriever in code that requires calculationHistoryRetriever
//		// and then make assertions.
//
//	}
type calculationHistoryRetrieverMock struct {
	// GetHistoryFunc mocks the GetHistory method.
	GetHistoryFunc func(userID string) ([]database.Calculation, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetHistory holds details about calls to the GetHistory method.
		GetHistory []struct {
			// UserID is the userID argument value.
			UserID string
		}
	}
	lockGetHistory sync.RWMutex
}

// GetHistory calls GetHistoryFunc.
func (mock *calculationHistoryRetrieverMock) GetHistory(userID string) ([]database.Calculation, error) {
	if mock.GetHistoryFunc == nil {
		panic("calculationHistoryRetrieverMock.GetHistoryFunc: method is nil but calculationHistoryRetriever.GetHistory was just called")
	}
	callInfo := struct {
		UserID string
	}{
		UserID: userID,
	}
	mock.lockGetHistory.Lock()
	mock.calls.GetHistory = append(mock.calls.GetHistory, callInfo)
	mock.lockGetHistory.Unlock()
	return mock.GetHistoryFunc(userID)
}

// GetHistoryCalls gets all the calls that were made to GetHistory.
// Check the length with:
//
//	len(mockedcalculationHistoryRetriever.GetHistoryCalls())
func (mock *calculationHistoryRetrieverMock) GetHistoryCalls() []struct {
	UserID string
} {
	var calls []struct {
		UserID string
	}
	mock.lockGetHistory.RLock()
	calls = mock.calls.GetHistory
	mock.lockGetHistory.RUnlock()
	return calls
}
